{
  "version": "2",
  "templates": [
    {
      "type": 1,
      "title": "Fail2Ban",
      "description": "Brute-Force blocker https://github.com/crazy-max/docker-fail2ban",
      "categories": ["webserver"],
      "platform": "linux",
      "logo": "https://upload.wikimedia.org/wikipedia/commons/d/db/Fail2ban_logo.png",
      "image": "crazymax/fail2ban:latest",
      "network": "host",
      "restart_policy": "unless-stopped",
      "volumes": [
        {
          "container": "/data",
          "bind": "/portainer/Files/AppData/Config/Fail2Ban"
        },
        {
          "container": "/var/log:ro",
          "bind": "/var/log"
        }
      ],
      "env": [
        {
          "name": "TZ",
          "label": "The timezone assigned to the container (default UTC)"
        },
        {
          "name": "F2B_LOG_TARGET",
          "label": "Set the log target. This could be a file, SYSLOG, STDERR or STDOUT (default STDOUT)"
        },
        {
          "name": "F2B_LOG_LEVEL",
          "label": "Log level output (default INFO)"
        },
        {
          "name": "F2B_DB_PURGE_AGE",
          "label": "Age at which bans should be purged from the database (default 1d)"
        },
        {
          "name": "SSMTP_HOST",
          "label": "SMTP server host"
        },
        {
          "name": "SSMTP_PORT",
          "label": "SMTP server port (default 25)"
        },
        {
          "name": "SSMTP_HOSTNAME",
          "label": "Full hostname (default $(hostname -f))"
        },
        {
          "name": "SSMTP_USER",
          "label": "SMTP username"
        },
        {
          "name": "SSMTP_PASSWORD",
          "label": "SMTP password"
        },
        {
          "name": "SSMTP_TLS",
          "label": "Use TLS to talk to the SMTP server (default NO)"
        },
        {
          "name": "SSMTP_STARTTLS",
          "label": " Specifies whether ssmtp does a EHLO/STARTTLS before starting SSL negotiation (default NO)"
        }
      ]
    },
    {
      "type": 1,
      "title": "Registry",
      "description": "Docker image registry",
      "categories": ["docker"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/registry.png",
      "image": "registry:latest",
      "ports": ["5000/tcp"],
      "volumes": [
        {
          "container": "/var/lib/registry"
        }
      ]
    },
    {
      "type": 1,
      "title": "Nginx",
      "description": "High performance web server",
      "categories": ["webserver"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/nginx.png",
      "image": "nginx:latest",
      "ports": ["80/tcp", "443/tcp"],
      "volumes": [
        {
          "container": "/etc/nginx"
        },
        {
          "container": "/usr/share/nginx/html"
        }
      ]
    },
    {
      "type": 1,
      "title": "Nginx Proxy Manager",
      "name": "nginx-proxy-manager",
      "description": "Nginx Proxy Manager enables you to easily forward to your websites running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt.",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/proxy_mgr.png",
      "image": "jlesage/nginx-proxy-manager",
      "categories": ["Proxy", "Tools"],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": ["80:8080/tcp", "81:8181/tcp", "443:4443/tcp"],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/Files/AppData/Config/Nginx-Proxy"
        }
      ]
    },
    {
      "type": 1,
      "title": "Let's Encrypt",
      "name": "letsencrypt",
      "description": "This container sets up an Nginx webserver and reverse proxy with php support and a built-in letsencrypt client that automates free SSL server certificate generation and renewal processes. It also contains fail2ban for intrusion prevention.\r\n  \r\n  Before running this container, make sure that the url and subdomains are properly forwarded to this container's host.\r\n  \r\n  - Port 443 on the internet side of the router should be forwarded to this container's port 443.\r\n  - If you need a dynamic dns provider, you can use the free provider duckdns.org where the url will be yoursubdomain.duckdns.org and the subdomains    can be www,ftp,cloud\r\n  - The container detects changes to url and subdomains, revokes existing certs and generates new ones during start. \r\n  - It also detects changes to the DHLEVEL parameter and replaces the dhparams file.\r\n  \r\n  - If you'd like to password protect your sites, you can use htpasswd. Run the following command on your host to generate the htpasswd file docker exec -it letsencrypt htpasswd -c /config/nginx/.htpasswd &lt;username&gt;",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/letsencrypt.png",
      "image": "linuxserver/letsencrypt:latest",
      "categories": ["Tools", "Web"],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": ["80/tcp", "443/tcp"],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/Files/AppData/Config/LetsEncrypt"
        }
      ],
      "env": [
        {
          "name": "EMAIL",
          "label": "EMAIL",
          "set": "-Xms256m -Xmx512m"
        },
        {
          "name": "URL",
          "label": "URL",
          "set": "-Xms256m -Xmx512m"
        },
        {
          "name": "SUBDOMAINS",
          "label": "SUBDOMAINS",
          "set": "www,"
        },
        {
          "name": "ONLY_SUBDOMAINS",
          "label": "ONLY_SUBDOMAINS",
          "set": "false"
        },
        {
          "name": "DHLEVEL",
          "label": "DHLEVEL",
          "set": "2048"
        },
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        },
        {
          "name": "VALIDATION",
          "label": "VALIDATION",
          "set": "http"
        },
        {
          "name": "DNSPLUGIN",
          "label": "DNSPLUGIN",
          "set": "http"
        }
      ]
    },
    {
      "type": 1,
      "title": "Caddy",
      "description": "HTTP/2 web server with automatic HTTPS",
      "categories": ["webserver"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/caddy.png",
      "image": "abiosoft/caddy:latest",
      "ports": ["80/tcp", "443/tcp", "2015/tcp"],
      "volumes": [
        {
          "container": "/root/.caddy"
        }
      ]
    },
    {
      "type": 1,
      "title": "MySQL",
      "description": "The most popular open-source database",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mysql.png",
      "image": "mysql:latest",
      "env": [
        {
          "name": "MYSQL_ROOT_PASSWORD",
          "label": "Root password"
        }
      ],
      "ports": ["3306/tcp"],
      "volumes": [
        {
          "container": "/var/lib/mysql"
        }
      ]
    },
    {
      "type": 1,
      "title": "MariaDB",
      "description": "Performance beyond MySQL",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mariadb.png",
      "image": "mariadb:latest",
      "env": [
        {
          "name": "MYSQL_ROOT_PASSWORD",
          "label": "Root password"
        }
      ],
      "ports": ["3306/tcp"],
      "volumes": [
        {
          "container": "/var/lib/mysql"
        }
      ]
    },
    {
      "type": 1,
      "title": "PostgreSQL",
      "description": "The most advanced open-source database",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/postgres.png",
      "image": "postgres:latest",
      "env": [
        {
          "name": "POSTGRES_USER",
          "label": "Superuser"
        },
        {
          "name": "POSTGRES_PASSWORD",
          "label": "Superuser password"
        }
      ],
      "ports": ["5432/tcp"],
      "volumes": [
        {
          "container": "/var/lib/postgresql/data"
        }
      ]
    },
    {
      "type": 1,
      "title": "Mongo",
      "description": "Open-source document-oriented database",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mongo.png",
      "image": "mongo:latest",
      "ports": ["27017/tcp"],
      "volumes": [
        {
          "container": "/data/db"
        }
      ]
    },
    {
      "type": 1,
      "title": "Redis",
      "description": "Open-source in-memory data structure store",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/redis.png",
      "image": "redis:latest",
      "ports": ["6379/tcp"],
      "volumes": [
        {
          "container": "/data"
        }
      ]
    },
    {
      "type": 1,
      "title": "Drupal",
      "description": "Open-source content management framework",
      "categories": ["CMS"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/drupal.png",
      "image": "drupal:latest",
      "ports": ["80/tcp"],
      "volumes": [
        {
          "container": "/var/www/html"
        }
      ]
    },
    {
      "type": 1,
      "title": "Magento 2",
      "description": "Open-source e-commerce platform",
      "categories": ["CMS"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/magento.png",
      "image": "alankent/gsd:latest",
      "ports": ["80/tcp", "3000/tcp", "3001/tcp"],
      "volumes": [
        {
          "container": "/var/www/html/"
        }
      ]
    },
    {
      "type": 1,
      "title": "Mautic",
      "description": "Open-source marketing automation platform",
      "categories": ["marketing"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mautic.png",
      "image": "mautic/mautic:latest",
      "env": [
        {
          "name": "MAUTIC_DB_HOST",
          "label": "MySQL database host",
          "type": "container"
        },
        {
          "name": "MAUTIC_DB_PASSWORD",
          "label": "Database password"
        }
      ],
      "ports": ["80/tcp"],
      "volumes": [
        {
          "container": "/var/www/html"
        }
      ]
    },
    {
      "type": 1,
      "title": "Jenkins",
      "description": "Open-source continuous integration tool",
      "categories": ["continuous-integration"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/jenkins.png",
      "image": "jenkins/jenkins:lts",
      "ports": ["8080/tcp", "50000/tcp"],
      "env": [
        {
          "name": "JENKINS_OPTS",
          "label": "Jenkins options"
        }
      ],
      "volumes": [
        {
          "container": "/var/jenkins_home"
        }
      ]
    },
    {
      "type": 2,
      "title": "OpenFaaS",
      "name": "func",
      "description": "Serverless functions made simple",
      "note": "Deploys the API gateway and sample functions. You can access the UI on port 8080. <b>Warning</b>: the name of the stack must be 'func'.",
      "categories": ["serverless"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/openfaas.png",
      "repository": {
        "url": "https://github.com/openfaas/faas",
        "stackfile": "docker-compose.yml"
      }
    },
    {
      "type": 2,
      "title": "Wordpress",
      "description": "Wordpress setup with a MySQL database",
      "note": "Deploys a Wordpress instance connected to a MySQL database.",
      "categories": ["CMS"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/wordpress.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/wordpress/docker-stack.yml"
      },
      "env": [
        {
          "name": "MYSQL_DATABASE_PASSWORD",
          "label": "Database root password",
          "description": "Password used by the MySQL root user."
        }
      ]
    },
    {
      "type": 3,
      "title": "Wordpress",
      "description": "Wordpress setup with a MySQL database",
      "note": "Deploys a Wordpress instance connected to a MySQL database.",
      "categories": ["CMS"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/wordpress.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/wordpress/docker-compose.yml"
      },
      "env": [
        {
          "name": "MYSQL_DATABASE_PASSWORD",
          "label": "Database root password",
          "description": "Password used by the MySQL root user."
        }
      ]
    },
    {
      "type": 1,
      "title": "Snibox",
      "name": "Snibox",
      "description": "Self-hosted snippet manager.",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/snibox.png",
      "image": "snowmean/snibox-sqlite:latest",
      "categories": ["Other", "Tools"],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": ["3010:3000/tcp"],
      "volumes": [
        {
          "container": "/app/db/database",
          "bind": "/portainer/Files/AppData/Config/Snibox"
        }
      ],
      "note": "Label-oriented interface with search. Supports various programming languages, markdown, plain text."
    },
    {
      "type": 1,
      "title": "Authelia",
      "name": "authelia",
      "description": "An open-source authentication and authorization server providing 2-factor authentication and single sign-on (SSO) for your applications via a web portal.",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/authelia.png",
      "image": "authelia/authelia:latest",
      "note": "Requires a configuration.yml file in order to work. Documentation is Available <a href='https://docs.authelia.com/deployment/deployment-ha'>here</a>.",
      "categories": ["Other", "Tools", "Authentication"],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": ["9091:9091/tcp"],
      "volumes": [
        {
          "container": "/etc/authelia/",
          "bind": "/portainer/Files/AppData/Config/Authelia"
        }
      ],
      "env": [
        {
          "name": "TZ",
          "label": "TZ"
        }
      ]
    },
    {
      "type": 1,
      "title": "Booksonic",
      "name": "booksonic",
      "description": "Booksonic is a server and an app for streaming your audiobooks to any pc or android phone. Most of the functionality is also availiable on other platforms that have apps for subsonic",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/booksonic.png",
      "image": "linuxserver/booksonic:latest",
      "categories": ["Books", "Other"],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": ["4040:4040/tcp"],
      "volumes": [
        {
          "container": "/books",
          "bind": "/portainer/Books"
        },
        {
          "container": "/podcast",
          "bind": "/portainer/Files/Podcasts"
        },
        {
          "container": "/config",
          "bind": "/portainer/Files/AppData/Config/Booksonic"
        }
      ],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        },
        {
          "name": "CONTEXT_PATH",
          "label": "CONTEXT_PATH",
          "default": "booksonic"
        }
      ]
    },
    {
      "type": 3,
      "title": "Bookstack",
      "description": "Bookstack is a free and open source Wiki designed for creating beautiful documentation. Feautring a simple, but powerful WYSIWYG editor it allows for teams to create detailed and useful documentation with ease.",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/bookstack2.png",
      "categories": ["Wiki"],
      "note": "Default login is admin@admin.com with a password of password. The database created is called bookstackapp and the database user is called bookstack",
      "platform": "linux",
      "repository": {
        "url": "https://github.com/Qballjos/portainer_templates",
        "stackfile": "Template/Stack/bookstack.yml"
      },
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        },
        {
          "name": "TZ",
          "label": "TZ"
        },
        {
          "name": "DATABASE_PASSWORD",
          "label": "DATABASE_PASSWORD"
        },
        {
          "name": "MYSQL_ROOT_PASSWORD",
          "label": "MYSQL_ROOT_PASSWORD"
        },
        {
          "name": "PORT",
          "label": "PORT"
        }
      ]
    },
    {
      "type": 3,
      "title": "Nextcloud",
      "name": "nextcloud",
      "description": "Where are your photos and documents? With Nextcloud you pick a server of your choice, at home, in a data center or at a provider. And that is where your files will be. Nextcloud runs on that server, protecting your data and giving you access from your desktop or mobile devices.",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/nextcloud-icon.png",
      "categories": ["Cloud", "Productivity", "Tools", "Other", "Web"],
      "note": "The database user is nextcloud and the database is nextcloud_db. The host of the database will be located at the bottom of the DB conotainer in portainer.",
      "platform": "linux",
      "repository": {
        "url": "https://github.com/Qballjos/portainer_templates",
        "stackfile": "Template/Stack/nextcloud.yml"
      },
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        },
        {
          "name": "TZ",
          "label": "TZ"
        },
        {
          "name": "DATABASE_PASSWORD",
          "label": "DATABASE_PASSWORD"
        },
        {
          "name": "MYSQL_ROOT_PASSWORD",
          "label": "MYSQL_ROOT_PASSWORD"
        },
        {
          "name": "PORT",
          "label": "PORT"
        }
      ]
    },
    {
      "type": 1,
      "title": "Code Server",
      "name": "code-server",
      "description": "Code-server is VS Code running on a remote server, accessible through the browser.",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/code-server.png",
      "image": "linuxserver/code-server:latest",
      "categories": ["Other", "Tools"],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": ["8443:8443/tcp"],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "GUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "TZ",
          "label": "TZ"
        },
        {
          "name": "PASSWORD",
          "label": "PASSWORD"
        },
        {
          "name": "SUDO_PASSWORD",
          "label": "SUDO_PASSWORD"
        },
        {
          "name": "PROXY_DOMAIN",
          "label": "PROXY_DOMAIN",
          "default": "example.my.domain"
        }
      ],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/Files/AppData/Config/Code-Server"
        }
      ]
    },
    {
      "type": 1,
      "title": "LibreSpeed",
      "name": "librespeed",
      "description": "A Free and Open Source Speedtest for HTML5 and more.",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/speedtest.png",
      "image": "linuxserver/librespeed:latest",
      "categories": ["Other", "Tools"],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": ["80/tcp"],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/Files/AppData/Config/LibreSpeed"
        }
      ]
    },
    {
      "type": 1,
      "title": "OpenVPN Access Server",
      "name": "openvpn-as",
      "description": "OpenVPN Access Server is a full featured secure network tunneling VPN software solution that integrates OpenVPN server capabilities, enterprise management capabilities, simplified OpenVPN Connect UI, and OpenVPN Client software packages that accommodate Windows, MAC, Linux, Android, and iOS environments.",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/openvpn-as-icon.png",
      "image": "linuxserver/openvpn-as:latest",
      "categories": ["Other"],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": ["943:943/tcp", "9443:9443/tcp", "1194:1194/udp"],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/Files/AppData/Config/OpenVPN-AS"
        }
      ],
      "env": [
        {
          "name": "INTERFACE",
          "label": "INTERFACE",
          "set": "eth0"
        },
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "100"
        }
      ]
    },
    {
      "type": 1,
      "title": "Pi-Hole",
      "name": "pihole",
      "description": "A Linux network-level advertisement and Internet tracker blocking application which acts as a DNS sinkhole.",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/pihole.png",
      "image": "pihole/pihole:latest",
      "categories": ["Other", "Tools"],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": [
        "53:53/tcp",
        "53:53/udp",
        "67:67/udp",
        "1010:80/tcp",
        "4443:443/tcp"
      ],
      "volumes": [
        {
          "container": "/etc/pihole",
          "bind": "/portainer/Files/AppData/Config/PiHole"
        },
        {
          "container": "/etc/dnsmasq.d",
          "bind": "/portainer/Files/AppData/Config/PiHole/DNS"
        }
      ],
      "note": "When the installation is complete, navigate to your.ip.goes.here:1010/admin. Follow the article <a href='https://medium.com/@niktrix/getting-rid-of-systemd-resolved-consuming-port-53-605f0234f32f'>here</a> if you run into issues binding to port 53."
    },
    {
      "type": 1,
      "title": "Whoogle",
      "name": "whoogle",
      "description": "Self-hosted, ad-free, privacy-respecting Google metasearch engine.",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/whoogle.png",
      "image": "benbusby/whoogle-search:latest",
      "categories": ["Other", "Tools"],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": ["5001:5000/tcp"],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/Files/AppData/Config/Whoogle"
        }
      ]
    },
    {
      "type": 1,
      "title": "Wikijs",
      "name": "Wikijs",
      "description": "Wikijs A modern, lightweight and powerful wiki app built on NodeJS.",
      "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/wikijs.png",
      "image": "linuxserver/wikijs:latest",
      "categories": ["Other", "Tools"],
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "ports": ["3100:3000/tcp"],
      "volumes": [
        {
          "container": "/config",
          "bind": "/portainer/Files/AppData/Config/Wikijs"
        },
        {
          "container": "/data",
          "bind": "/portainer/Files/AppData/Config/Wikijs/data"
        }
      ]
    }
  ]
}
